{
  "appid": "9c7fd282-503a-4694-9e0f-597a30709f0a",
  "name": "Malware Analysis Service",
  "description": "Integrate with Malware Analysis Service (MAS) to execute actions like detonate file and get report",
  "publisher": "Phantom",
  "package_name": "phantom_mas",
  "type": "sandbox",
  "license": "Copyright (c) Phantom Cyber Corporation 2017",
  "main_module": "bcmas_connector.pyc",
  "app_version": "1.0.20",
  "utctime_updated": "2022-01-07T21:22:38.000000Z",
  "product_vendor": "Symantec",
  "product_name": "Malware Analysis Service",
  "product_version_regex": ".*",
  "min_phantom_version": "6.2.1",
  "logo": "logo_symantec.svg",
  "logo_dark": "logo_symantec_dark.svg",
  "configuration": {
    "url": {
      "data_type": "string",
      "description": "URL of Malware Analysis Service instance",
      "required": true,
      "order": 0
    },
    "username": {
      "data_type": "string",
      "description": "Malware Analysis Service Username",
      "required": false,
      "order": 2
    },
    "password": {
      "data_type": "password",
      "description": "Malware Analysis Service Password",
      "required": false,
      "order": 3
    },
    "api_key": {
      "data_type": "password",
      "description": "API Key",
      "required": false,
      "order": 1
    },
    "timeout": {
      "data_type": "numeric",
      "description": "Detonate timeout in mins",
      "required": false,
      "default": 10,
      "order": 4
    },
    "verify_server_cert": {
      "data_type": "boolean",
      "description": "Verify server certificate",
      "required": true,
      "order": 5
    }
  },
  "actions": [
    {
      "action": "test connectivity",
      "description": "Checks connectivity with the configured Malware Analysis Service instance using either the API key, or the user credentials",
      "verbose": "",
      "type": "test",
      "identifier": "test_connectivity",
      "read_only": true,
      "parameters": {},
      "output": [],
      "versions": "EQ(*)"
    },
    {
      "action": "detonate file",
      "description": "Run the file in the Malware Analysis Service instance and, if possible, retrieve the analysis results",
      "verbose": "<p>This action requires the input file to be present in the vault.<br><br>The action will wait up to the timeout (set in asset configuration) for the detonation to complete. If the detonation does not complete before the timeout, use <b>get report</b> to get the final result of the detonation. Some things to note:<ul><li>The <b>environment</b> parameter can have the values <i>IntelliVM</i>, <i>SandBox</i>, or <i>Mobile IntelliVM</i>.</li><li>The <b>priority</b> parameter can have the values <i>high</i>, <i>medium</i>, or <i>low</i>.</li><li>The <b>profile</b> parameter only applies if the <b>environment</b> parameter is set to <i>IntelliVM</i>.</li><li>The <b>owner</b> parameter defaults to the asset's <b>username</b> parameter if it is set. If the asset <b>username</b> parameter is not set, the <b>owner</b> is required</li></ul></p>",
      "type": "investigate",
      "identifier": "detonate_file",
      "read_only": true,
      "parameters": {
        "vault_id": {
          "description": "Vault ID of the file to detonate",
          "primary": true,
          "data_type": "string",
          "required": true,
          "order": 0,
          "contains": ["vault id"]
        },
        "environment": {
          "description": "Environment in which to detonate the file",
          "data_type": "string",
          "required": true,
          "value_list": ["IntelliVM", "SandBox", "Mobile IntelliVM"],
          "order": 1,
          "default": "IntelliVM"
        },
        "profile": {
          "description": "If environment is set to IntelliVM, ID or short name of the profile in which to detonate the file",
          "data_type": "string",
          "order": 2,
          "required": false
        },
        "priority": {
          "description": "Priority with which to run the task",
          "data_type": "string",
          "required": true,
          "value_list": ["high", "medium", "low"],
          "order": 3,
          "default": "high"
        },
        "source": {
          "description": "Source of the file to detonate (defaults to www)",
          "data_type": "string",
          "required": false,
          "default": "www",
          "order": 4
        },
        "label": {
          "description": "A label to give the file to detonate (defaults to the vault ID of the file)",
          "data_type": "string",
          "required": false,
          "order": 5
        },
        "description": {
          "description": "A Description to give the file to detonate",
          "data_type": "string",
          "required": false,
          "order": 6
        },
        "owner": {
          "description": "An owner to assign to the file to detonate (defaults to asset username if it is configured)",
          "data_type": "string",
          "required": false,
          "order": 7
        }
      },
      "render": {
        "width": 12,
        "title": "Detonate File",
        "type": "table",
        "height": 5
      },
      "output": [
        {
          "data_path": "action_result.data.*.request",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_label",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_owner",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_source",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_description",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_exec_arguments",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.resource_magic_magic",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_md5",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_size",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_owner",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.resource_magic_magic_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_sha256",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_magic_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_read_only",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_date_added",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_resource_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_resource_name",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_resource_present",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_sample_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_date_added",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_sample_type",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_basic_sample_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_basic_resource_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.exec_time",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.api_version",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.server_time",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results_count",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.task_queue.name",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.task_queue.messages",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_env_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_task_id",
          "data_type": "numeric",
          "column_name": "Task ID",
          "column_order": 1,
          "contains": ["mas task id"]
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_state_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_sample_id",
          "data_type": "numeric",
          "column_name": "Sample ID",
          "column_order": 4
        },
        {
          "data_path": "action_result.data.*.results.*.task_state_state",
          "data_type": "string",
          "column_name": "Task Status",
          "column_order": 3
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_task_start",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.environments_env_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.task_state_state_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_storage_class",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.environments_env_type",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.environments_local_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.environments_host_type",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_owner_risk_score",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.environments_host_label",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_global_risk_score",
          "data_type": "numeric",
          "column_name": "Risk Score",
          "column_order": 2
        },
        {
          "data_path": "action_result.data.*.results.*.task_properties.*.task_properties_name",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.task_properties.*.task_properties_sval",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.task_properties.*.task_properties_nval",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.task_properties.*.task_properties_task_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_env_start",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_env_runtime",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.vm_profiles_vmp_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_exec_arguments",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_env_return_code",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.vm_profiles_short_name",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.environments_current_task",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "action_result.summary",
          "data_type": "string"
        },
        {
          "data_path": "action_result.summary.risk_score",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.summary.task_status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.parameter.vault_id",
          "data_type": "string",
          "column_name": "Vault ID",
          "column_order": 0,
          "contains": ["vault id"]
        },
        {
          "data_path": "action_result.parameter.environment",
          "data_type": "string"
        },
        {
          "data_path": "action_result.parameter.description",
          "data_type": "string"
        },
        {
          "data_path": "action_result.parameter.priority",
          "data_type": "string"
        },
        {
          "data_path": "action_result.parameter.profile",
          "data_type": "string"
        },
        {
          "data_path": "action_result.parameter.source",
          "data_type": "string"
        },
        {
          "data_path": "action_result.parameter.owner",
          "data_type": "string"
        },
        {
          "data_path": "action_result.parameter.label",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        }
      ],
      "versions": "EQ(*)"
    },
    {
      "action": "get report",
      "description": "Retrieve the analysis results of a file detonation",
      "verbose": "",
      "type": "investigate",
      "identifier": "get_report",
      "read_only": true,
      "parameters": {
        "task_id": {
          "description": "Task ID of the report to get",
          "primary": true,
          "data_type": "numeric",
          "required": true,
          "order": 0,
          "contains": ["mas task id"]
        }
      },
      "render": {
        "width": 12,
        "title": "Get Report",
        "type": "table",
        "height": 5
      },
      "output": [
        {
          "data_path": "action_result.data.*.request",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_label",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_owner",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_source",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_description",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_exec_arguments",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.resource_magic_magic",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_md5",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_size",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_owner",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.resource_magic_magic_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_sha256",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_magic_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_read_only",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_date_added",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_resource_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_resource_name",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.sample_resources.*.sample_resources_resource_present",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_sample_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_date_added",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_sample_type",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_basic_sample_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.samples_basic_resource_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.exec_time",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.api_version",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.server_time",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results_count",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.task_queue.name",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.task_queue.messages",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_env_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_task_id",
          "data_type": "numeric",
          "column_name": "Task ID",
          "column_order": 0,
          "contains": ["mas task id"]
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_state_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_sample_id",
          "data_type": "numeric",
          "column_name": "Sample ID",
          "column_order": 3
        },
        {
          "data_path": "action_result.data.*.results.*.task_state_state",
          "data_type": "string",
          "column_name": "Task Status",
          "column_order": 2
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_task_start",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.environments_env_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.task_state_state_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_storage_class",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.environments_env_type",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.environments_local_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.environments_host_type",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_owner_risk_score",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.environments_host_label",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_global_risk_score",
          "data_type": "numeric",
          "column_name": "Risk Score",
          "column_order": 1
        },
        {
          "data_path": "action_result.data.*.results.*.task_properties.*.task_properties_name",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.task_properties.*.task_properties_sval",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.task_properties.*.task_properties_nval",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.task_properties.*.task_properties_task_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_env_start",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_env_runtime",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.vm_profiles_vmp_id",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_exec_arguments",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.tasks_env_return_code",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.results.*.vm_profiles_short_name",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.results.*.environments_current_task",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "action_result.summary",
          "data_type": "string"
        },
        {
          "data_path": "action_result.summary.risk_score",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.summary.task_status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.parameter.task_id",
          "data_type": "numeric",
          "contains": ["mas task id"]
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        }
      ],
      "versions": "EQ(*)"
    }
  ],
  "pip_dependencies": {
    "wheel": []
  }
}
